What happens when you initialize a repository? Why do you need to do it?
I bet it's how you create the .git directory to start tracking the history of the repo.

How is the staging area different from the working directory and the repository? What 
value do you think it offers?
It doesn't actually affect anything until you say to commit. It lets you set up the commit with
the files you actually want instead of always committing the entire repo. In particular this lets 
you control each commit so it can be per logical step, even if you changed more than one thing

How can you use the staging area to make sure you have one commit per logical change?
It lets you review your commit before making it, line by line.

What are some situations when branches would be helpful in keeping your history organized? 
How would branches help?
Any time you're adding features that weren't originally intended in the project. It helps 
because it lets you work separately on those features without having them affect the project,
in case it doesn't go as intended.

How do the diagrams help you visualize the branch structure?
Maybe I'm getting hungry but a diagram is literally a visualization of the structure.
I don't know how to be more specific.

What is the result of merging two branches together? Why do we represent it in the diagram the 
way we do?
The result is that any changes that have been made get combined into a new commit, and all 
of the two branches' history is reachable from the merge. Git decides how the changes should 
be merged in a logical way. If there's no clear way of merging them it won't do it.